expose:
  type: ingress
  tls:
    enabled: true
    certSource: auto

  ingress:
    hosts:
      core: harbor.myweb.com
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/rewrite-target: /
      cert-manager.io/cluster-issuer: "selfsigned-issuer"

externalURL: https://harbor.myweb.com

persistence:
  enabled: true

harborAdminPassword: "Harbor12345"

ipFamily:
  ipv6:
    enabled: false

portal:
  image:
    # 인텔칩 linux/amd64 환경은 아래 goharbor 이미지 레포 사용  
    # repository: goharbor/harbor-portal

    # ARM 계열 linux/arm64 환경은 아래 octohelm 이미지 레포 사용  
    repository: ghcr.io/octohelm/harbor/harbor-portal
    tag: v2.12.0

core:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-core
    tag: v2.12.0

jobservice:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-jobservice
    tag: v2.12.0

registry:
  registry:
    image:
      repository: ghcr.io/octohelm/harbor/registry-photon
      tag: v2.12.0
  controller:
    image:
      repository: ghcr.io/octohelm/harbor/harbor-registryctl
      tag: v2.12.0


trivy:
  enabled: true
  image:
    repository: ghcr.io/octohelm/harbor/trivy-adapter-photon
    tag: v2.12.0

database:
  # if external database is used, set "type" to "external"
  # and fill the connection information in "external" section
  type: internal
  internal:
    image:
      repository: ghcr.io/octohelm/harbor/harbor-db
      tag: v2.12.0

redis:
  # if external Redis is used, set "type" to "external"
  # and fill the connection information in "external" section
  type: internal
  internal:
    image:
      repository: ghcr.io/octohelm/harbor/redis-photon
      tag: v2.12.0

exporter:
  image:
    repository: ghcr.io/octohelm/harbor/harbor-exporter
    tag: v2.11.0
